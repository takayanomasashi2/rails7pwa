<!-- app/views/posts/index.html.erb -->
<h1>Welcome to the Posts Index Page</h1>

<button id="subscribeButton">Subscribe to Notifications</button>

<script>
  // サービスワーカーがサポートされているかチェック
  if ('serviceWorker' in navigator && 'PushManager' in window) {
    navigator.serviceWorker.register('/service-worker.js')
      .then(function (registration) {
        console.log('Service Worker registered with scope: ', registration.scope);

        // プッシュ通知を購読するボタンのイベントリスナー
        document.getElementById('subscribeButton').addEventListener('click', async function () {
          // VAPID公開鍵をRailsの環境変数から取得
          const publicKey = '<%= ENV["VAPID_PUBLIC_KEY"] %>';

          try {
            // 通知の許可を求める
            const permission = await Notification.requestPermission();
            if (permission !== 'granted') {
              console.error('通知の許可が得られませんでした');
              return;
            }

            // プッシュ通知の購読を作成
            const subscription = await registration.pushManager.subscribe({
              userVisibleOnly: true,
              applicationServerKey: urlBase64ToUint8Array(publicKey)
            });

            // 購読情報をサーバーに送信
            await fetch('/subscriptions', {
              method: 'POST',
              body: JSON.stringify(subscription),
              headers: {
                'Content-Type': 'application/json'
              }
            });

            alert('Notification subscription created successfully!');
          } catch (error) {
            console.error('Error subscribing to push notifications:', error);
          }
        });
      })
      .catch(function (error) {
        console.error('Service Worker registration failed: ', error);
      });

    // Base64エンコードされた公開鍵をUint8Arrayに変換する関数
    function urlBase64ToUint8Array(base64String) {
      const padding = '='.repeat((4 - base64String.length % 4) % 4);
      const base64 = (base64String + padding)
        .replace(/-/g, '+')
        .replace(/_/g, '/');
      const rawData = atob(base64);
      return new Uint8Array([...rawData].map(char => char.charCodeAt(0)));
    }
  } else {
    console.log('Service Worker または PushManagerがサポートされていません');
  }
</script>
